use `$self->_re` instead of `$self->_regex->regexp` in `filter` sub, improve performance as follow:

$ wc -l access.log.10 
100000 access.log.10

$ time cat access.log.10 | ./mp-agent.pl 

real    1m22.519s
user    1m13.296s
sys     0m1.452s

$ time cat access.log.10 | ./mp-agent.pl 

real    0m44.606s
user    0m37.460s
sys     0m1.128s


use logstash es_http:

default:

$ time cat access.log.10 | java -jar logstash-1.1.13-flatjar.jar agent -f logstash-sample.conf 

real    4m30.013s
user    2m34.680s
sys     0m4.500s

increase `flush_size` to 1000 (same as message-passing):

$ time cat access.log.10 | java -jar logstash-1.1.13-flatjar.jar agent -f logstash-sample.conf 

real    3m41.657s
user    2m27.164s
sys     0m4.420s



get '/' => require_role SOM => sub {
    my $indices = $elsearch->cluster_state->{routing_table}->{indices};
    template 'psa/map',
      {
        providers => [ sort keys %$default_provider ],
        datasources =>
          [ grep { /^$index_prefix/ && s/$index_prefix// } keys %$indices ],
        inputfrom => strftime( "%F\T%T", localtime( time() - 864000 ) ),
        inputto   => strftime( "%F\T%T", localtime() ),
      };
};

ajax '/api/area' => sub {
    my $param = from_json( request->body );
    my $index = $index_prefix . $param->{'datasource'};
    my $limit = $param->{'limit'} || 50;
    my $from  = $param->{'from'} || 'now-10d';
    my $to    = $param->{'to'} || 'now';
    my $res   = pct_terms( $index, $limit, $from, $to );
    return to_json($res);
};

sub area_terms {
    my ( $index, $level, $limit, $from, $to ) = @_;
    my $data = $elsearch->search(
        index  => $index,
        type   => $type,
        size   => 0,
        facets => {
            area => {
                facet_filter => {
                    and => [
                        {
                            range => {
                                date => {
                                    from => $from,
                                    to   => $to
                                },
                            },
                        },
                        {
                            numeric_range => { timeCost => { gte => $level } },
                        },
                    ],
                },
                terms => {
                    field => "fromArea",
                    size  => $limit,
                }
            }
        }
    );
    return $data->{facets}->{area}->{terms};
}


http://chenlinux.com/images/uploads/amchart-line.png

http://chenlinux.com/images/uploads/amchart-column.png
